# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  CppProject_config = debug
  ProjectCreator_config = debug

else ifeq ($(config),release)
  CppProject_config = release
  ProjectCreator_config = release

else ifeq ($(config),dist)
  CppProject_config = dist
  ProjectCreator_config = dist

else ifeq ($(config),publish)
  CppProject_config = publish
  ProjectCreator_config = publish

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := CppProject ProjectCreator

.PHONY: all clean help $(PROJECTS) Libs

all: $(PROJECTS)

Libs: CppProject

CppProject:
ifneq (,$(CppProject_config))
	@echo "==== Building CppProject ($(CppProject_config)) ===="
	@${MAKE} --no-print-directory -C libs/CppProject -f Makefile config=$(CppProject_config)
endif

ProjectCreator: CppProject
ifneq (,$(ProjectCreator_config))
	@echo "==== Building ProjectCreator ($(ProjectCreator_config)) ===="
	@${MAKE} --no-print-directory -C . -f ProjectCreator.make config=$(ProjectCreator_config)
endif

clean:
	@${MAKE} --no-print-directory -C libs/CppProject -f Makefile clean
	@${MAKE} --no-print-directory -C . -f ProjectCreator.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  release"
	@echo "  dist"
	@echo "  publish"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   CppProject"
	@echo "   ProjectCreator"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"